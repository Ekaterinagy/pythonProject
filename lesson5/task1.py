"""
Задание 1. Написать программу, которая будет складывать, вычитать,
умножать или делить два числа. Числа и знак операции вводятся пользователем.
После выполнения вычисления программа не должна завершаться, а должна
запрашивать новые данные для вычислений. Завершение программы должно
выполняться при вводе символа '0' в качестве знака операции. Если пользователь
вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна
сообщать ему об ошибке и снова запрашивать знак операции.
Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.
Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ
Решите через рекурсию. В задании нельзя применять циклы.
Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""


def calculation(is_finish=False):
    if is_finish:
        return
    operation = input("Введите операцию (+, -, *, / или 0 для выхода): ")
    res = 0
    if operation == '0':
        print("Вы вышли из программы")
        is_finish = True

    elif operation not in '+ - / *'.split():
        print("Такой операции нет")
        calculation()
    else:
        n = int(input("Введите первое число: "))
        m = int(input("Введите второе число: "))
    if not is_finish:
        if operation == '+':
            print("Сложение")
            res = n + m
        elif operation == '-':
            print("Вычитание")
            res = n - m
        elif operation == '/':
            print("Деление")
            res = n / m
            if m == 0:
                print("Невозможно поделить на 0!!!")
        elif operation == "*":
            print("Умножение")
            res = n * m

        print(res)
    calculation(is_finish)


calculation()
